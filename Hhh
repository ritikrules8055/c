import React, { useState } from 'react';

const initialFormData = {
  ID: '',
  empID: '',
  managerID: '',
  category: '',
  amount: 0,
  receipt: null,
  status: 'pending',
  userComment: '',
  managerComment: '',
  date: '',
};

const statusOptions = ['pending', 'approved', 'rejected'];

function Form() {
  const [formData, setFormData] = useState(initialFormData);

  const handleInputChange = (e) => {
    const { name, value, type } = e.target;
    const newValue = type === 'number' ? parseInt(value) : value;
    setFormData({ ...formData, [name]: newValue });
  };

  const handleFileChange = (e) => {
    const file = e.target.files[0];
    setFormData({ ...formData, receipt: file });
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    // Add your form submission logic here
    console.log(formData);
  };

  return (
    <div className="container">
      <h2>Expense Form</h2>
      <form onSubmit={handleSubmit}>
        <div className="mb-3">
          <label htmlFor="ID" className="form-label">ID</label>
          <input
            type="text"
            className="form-control"
            id="ID"
            name="ID"
            value={formData.ID}
            onChange={handleInputChange}
            required
          />
        </div>
        <div className="mb-3">
          <label htmlFor="empID" className="form-label">Emp ID</label>
          <input
            type="text"
            className="form-control"
            id="empID"
            name="empID"
            value={formData.empID}
            onChange={handleInputChange}
            required
          />
        </div>
        <div className="mb-3">
          <label htmlFor="managerID" className="form-label">Manager ID</label>
          <input
            type="text"
            className="form-control"
            id="managerID"
            name="managerID"
            value={formData.managerID}
            onChange={handleInputChange}
            required
          />
        </div>
        <div className="mb-3">
          <label htmlFor="category" className="form-label">Category</label>
          <input
            type="text"
            className="form-control"
            id="category"
            name="category"
            value={formData.category}
            onChange={handleInputChange}
            required
          />
        </div>
        <div className="mb-3">
          <label htmlFor="amount" className="form-label">Amount</label>
          <input
            type="number"
            className="form-control"
            id="amount"
            name="amount"
            value={formData.amount}
            onChange={handleInputChange}
            required
            min="0"
          />
        </div>
        <div className="mb-3">
          <label htmlFor="receipt" className="form-label">Receipt</label>
          <input
            type="file"
            className="form-control"
            id="receipt"
            name="receipt"
            accept="image/*"
            onChange={handleFileChange}
            required
          />
        </div>
        <div className="mb-3">
          <label htmlFor="status" className="form-label">Status</label>
          <select
            className="form-select"
            id="status"
            name="status"
            value={formData.status}
            onChange={handleInputChange}
            required
          >
            {statusOptions.map((option) => (
              <option key={option} value={option}>{option}</option>
            ))}
          </select>
        </div>
        <div className="mb-3">
          <label htmlFor="userComment" className="form-label">User Comment</label>
          <input
            type="text"
            className="form-control"
            id="userComment"
            name="userComment"
            value={formData.userComment}
            onChange={handleInputChange}
          />
        </div>
        <div className="mb-3">
          <label htmlFor="managerComment" className="form-label">Manager Comment</label>
          <input
            type="text"
            className="form-control"
            id="managerComment"
            name="managerComment"
            value={formData.managerComment}
            onChange={handleInputChange}
          />
        </div>
        <div className="mb-3">
          <label htmlFor="date" className="form-label">Date</label>
          <input
            type="date"
            className="form-control"
            id="date"
            name="date"
            value={formData.date}
            onChange={handleInputChange}
            required
          />
        </div>
        <button type="submit" className="btn btn-primary">Submit</button>
      </form>
    </div>
  );
}

export default Form;
